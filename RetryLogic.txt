@Component
public class FicoRetryQueue {

    private static final Logger logger = LoggerFactory.getLogger(FicoRetryQueue.class);

    private final FicoRetryQueueConfig config;
    private final RabbitTemplate rabbitTemplate;

    public static final String ATTEMPTS_HEADER_NAME = "Attempts";
    public static final String DELAY_INDEX_NAME = "Delay Index";
    public static final String TOTAL_ATTEMPTS_NAME = "Total Attempts";

    @Autowired
    public FicoRetryQueue(final FicoRetryQueueConfig config, final RabbitTemplate rabbitTemplate) {
        this.config = config;
        this.rabbitTemplate = rabbitTemplate;
    }

    public void send(Message message, Exception e) {
        if(config.isEnabled()){
            Map<String, Object> headers = message.getMessageProperties().getHeaders();
            int delayIndex = 0;
            int attempts = 0;
            int totalAttempts = 1;
            if(!headers.containsKey(ATTEMPTS_HEADER_NAME)){
                attempts = config.getQueues().get(0).getTimes();
                message.getMessageProperties().setHeader(ATTEMPTS_HEADER_NAME, attempts);
                message.getMessageProperties().setHeader(DELAY_INDEX_NAME, 0);
                message.getMessageProperties().setHeader(TOTAL_ATTEMPTS_NAME, 2);
            }
            else{
                attempts = (Integer)message.getMessageProperties().getHeaders().get(ATTEMPTS_HEADER_NAME) - 1;
                delayIndex = (Integer)message.getMessageProperties().getHeaders().get(DELAY_INDEX_NAME);
                if(attempts <= 0){
                    delayIndex++;
                    if(delayIndex > config.getQueues().size() - 1){
                        throw new AmqpRejectAndDontRequeueException("Error processing FICO message, no further retries permitted");
                    }
                    attempts = config.getQueues().get(delayIndex).getTimes();
                }
                message.getMessageProperties().setHeader(ATTEMPTS_HEADER_NAME, attempts);
                message.getMessageProperties().setHeader(DELAY_INDEX_NAME, delayIndex);
                message.getMessageProperties().setHeader(TOTAL_ATTEMPTS_NAME, Integer.parseInt(headerValue(message, TOTAL_ATTEMPTS_NAME)) + 1);
            }
            rabbitTemplate.send(config.getQueues().get(delayIndex).getExchange(), config.getQueues().get(delayIndex).getRoutingKey(), message);
        }
        else{
            logger.info("Fico Message retry disabled, message not sent to queue");
            throw new AmqpRejectAndDontRequeueException("Error processing FICO message, retries are disabled");
        }
    }



}